buildscript {
    ext.kotlin_version = '1.3.11'
    ext.spring_boot_version = '2.1.1.RELEASE'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply{
    plugin("java")
    plugin("kotlin")
    plugin("kotlin-spring")
    plugin("org.springframework.boot")
    plugin("io.spring.dependency-management")
    plugin("war")
}

repositories {
    mavenCentral()
}

dependencies {
    
    implementation "org.springframework.boot:spring-boot-configuration-processor"
   
    compile "org.springframework.boot:spring-boot-starter"
    compile 'org.springframework:spring-jms'
    compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
    
    
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version".toString()
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version".toString()
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1"
    
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'org.apache.logging.log4j:log4j-api:2.8.2'
    
    compile 'com.ibm.mq:com.ibm.mq.allclient:9.1.1.0'
    
}



//jacoco {
//    toolVersion = "0.8.3"
//    reportsDir = file("./reports")
//}
//test {
//    jvmArgs = ["-Dparus.configuration.path=classpath:test",
//               "-Dapplication.server.host=test"]
//    jacoco {
//        destinationFile = file("./reports/jacoco/test/jacocoTest.exec")
//    }
//    reports.junitXml.destination = file("./reports")
//
//}
//jacocoTestReport {
//    executionData = files("./reports/jacoco/test/jacocoTest.exec")
//    classDirectories = files("./build/classes")
//   // sourceDirectories = files("./src/main/kotlin")
//
//    reports {
//        xml.enabled  true
//        xml.destination("./reports/jacoco/test/jacocoTest.xml")
//        html.enabled false
//    }
//}

//sonarqube {
//    properties {
//        properties["sonar.junit.reportPaths"] = test.reports.junitXml.destination
//    }
//}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}